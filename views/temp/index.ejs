<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="./css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link href="./css/parsley.css" rel="stylesheet" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="./css/datatables-1.10.25.min.css"/>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.2.2/css/buttons.bootstrap4.css"/>


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
          integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg=="
          crossorigin="anonymous" referrerpolicy="no-referrer"/>
</head>

<body style="margin: 30px;">
<!-- Add btn -->
<div class="mb-3  text-center">
    <button type="button" class=" addbtn btn btn-primary btn-sm"><i class="fa-solid fa-floppy-disk mr-2"></i>Add
        Task
    </button>
</div>

<!-- Add Modal -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Task</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addform" action="todo" method="post">
                    <div class="form-group">
                        <label for="exampleInputEmail1">Name</label>
                        <input type="text" class="form-control addtitle" name="title" aria-describedby="emailHelp"
                               placeholder="Name" data-parsley-required="true" data-parsley-pattern="^[a-zA-Z]+$">
                        <h6 class="errortext" style="color:red;display: none">* Name already exists</h6>

                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Description</label>
                        <input type="text" class="form-control" name="description" placeholder="Description"
                               data-parsley-required="true" data-parsley-pattern="^[a-zA-Z]+$"
                               data-parsley-length="[10,100]" data-parsley-trigger="keyup">
                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword1">Status</label>
                        <select type="text" class="form-control" name="status" placeholder="Status"
                                data-parsley-required="true">
                            <option value="pending">Pending</option>
                            <option value="done">Done</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword1">Date</label>
                        <input type="datetime-local" class="form-control" name="date" placeholder="Date">
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" id="savebtn" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>
<!-- Add Modal -->
<div>

    <div class="card">
        <div class="card-header mb-3"><strong>Task List</strong></div>
        <div class="card-body">
            <table class="table table-striped table-bodered text-center">
                <thead>
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>


    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Task</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editform">
                        <div class="form-group">
                            <input type="hidden" class="form-control" name="_id" aria-describedby="emailHelp">

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Name</label>
                            <input type="text" class="form-control edittitle" name="title"
                                   aria-describedby="emailHelp">

                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Description</label>
                            <input type="text" class="form-control editdesc" name="description">
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Status</label>
                            <select type="text" class="form-control editstatus" name="status">
                                <option value="pending" class="editpending">Pending</option>
                                <option value="done" class="editdone">Done</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Present Date</label>
                            <input type="text" class="form-control editdate" name="presentdate" readonly>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Date</label>
                            <input type="datetime-local" class="form-control" name="date">
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
    <!-- Edit Modal -->

    </table>
</div>
<script src="./js/jquery-3.6.0.min.js" crossorigin="anonymous"></script>
<script src="./js/parsley.min.js" crossorigin="anonymous"></script>
<script src="./js/bootstrap.min.js" crossorigin="anonymous"></script>
<script type="text/javascript" src="./js/dt-1.10.25datatables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.bootstrap4.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    let mytable
    $(document).ready(function () {
        $('#addform').parsley()
        mytable = $('.table').DataTable({
            ajax: 'todo/table',
            columns: [
                {data: 'title'},
                {data: 'description'},
                {
                    render: (data, type, row) => {
                        let odstatus = row.status.substr(0, 1).toUpperCase()
                        let mstatus = odstatus + row.status.substr(1)

                        if (row.status === 'pending')
                            return `<span class="badge badge-lg badge-warning p-1">${mstatus}</span>`
                        else
                            return `<span class="badge badge-lg badge-success p-1">${mstatus}</span>`

                    }
                },
                {
                    render: (data, type, row) => {
                        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                        let oddate = new Date(row.date)
                        let date = oddate.getDate()
                        let month = oddate.getMonth()
                        let hours = oddate.getHours()
                        let minutes = oddate.getMinutes()
                        if (hours === 12) {
                            hours = hours + ':' + minutes + ' PM'
                        } else if (hours > 12) {
                            hours = (Number(hours)) - 12 + ':' + minutes + " PM"
                        } else if (hours < 12) {
                            hours = hours + ':' + minutes + " AM"
                        }

                        return date + " " + months[month] + ' ' + hours
                    }

                },
                {
                    render: (data, type, row) => {
                        return `<button class="btn btn-primary btn-sm mr-2 editbtn" data-id="${row._id}" data-title="${row.title}" data-description="${row.description}" data-status="${row.status}" data-date="${row.date}"><i class="fa-solid fa-pen-to-square mr-1"></i>Edit</button><button class="btn btn-danger btn-sm mr-2 delbtn" data-id="${row._id}"><i class="fa-solid fa-trash mr-1"></i>Delete</button>`
                    }
                }
            ]
        });
    });

    $('#addModal').on("hidden.bs.modal", (e) => {
        $('#addform').trigger('reset')
        $('#addform').parsley().reset()
        $('.addtitle').removeClass('parsley-success')
        $('.addtitle').removeClass('parsley-error')
        $('.errortext').css('display','none')
    })

    $('#editModal').on("hidden.bs.modal", (e) => {
        $('#editform').trigger('reset')
    })

    $('.addbtn').click(function () {
        $('#addModal').modal('show');
    })

    $(document).on('click', '.editbtn', function () {
        let id = $(this).data('id')
        let title = $(this).data('title')
        let description = $(this).data('description')
        let status = $(this).data('status')
        let date = $(this).data('date')
        let mdate = new Date(date).toLocaleString()

        if (status === 'done') {
            $('.editdone').attr('selected', 'selected')
        } else {
            $('.editpending').attr('selected', 'selected')
        }

        $('input[name="_id"]').val(id)
        $('.edittitle').val(title)
        $('.editdesc').val(description)
        $('.editstatus').val(status)
        $('.editdate').val(mdate)

        $('#editModal').modal('show');
    })

    $('.addtitle').focusout(() => {
        $('.errortext').hide()
        $('.addtitle').removeClass('parsley-success')
        $('.addtitle').removeClass('parsley-error')
        let checktitle = $('.addtitle').val()
        $.ajax({
            url: 'todo/checkname',
            method: 'POST',
            data: {title:checktitle},
            success: function (data) {
                $('.addtitle').addClass('parsley-success')
            },
            error:function (){
                $('.addtitle').addClass('parsley-error')
                $('.errortext').show()

            }
        })

    })

    $('#addform').submit(function (e) {
        e.preventDefault();
        if ($(this).parsley().isValid()) {
            let data = $(this).serialize();
            $.ajax({
                url: 'todo',
                method: 'POST',
                data: data,
                success: function (data) {

                    Swal.fire({
                        icon: 'success',
                        text: 'Data Saved',
                        timer: 2000
                    })
                    mytable.ajax.reload();


                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        text: 'Save Failed',
                        timer: 2000
                    })
                }
            })
            $('#addModal').modal('hide')

        }

    })


    $('#editform').submit(function (e) {
        e.preventDefault();
        let data = $(this).serialize();
        $.ajax({
            url: 'todo',
            method: 'PUT',
            data: data,
            success: function (data) {

                Swal.fire({
                    icon: 'success',
                    text: 'Data Edited',
                    timer: 2000
                })
                mytable.ajax.reload();


            },
            error: function () {
                Swal.fire({
                    icon: 'error',
                    text: 'Edit Failed',
                    timer: 2000
                })
            }
        })
        $('#editModal').modal('hide')
    })

    $(document).on("click", ".delbtn", function (e) {
        e.preventDefault();
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                let data = $(this).data('id');
                $.ajax({
                    url: 'todo',
                    method: 'DELETE',
                    data: {_id: data},
                    success: function (data) {
                        Swal.fire({
                            icon: 'success',
                            text: 'Data Deleted',
                            timer: 2000
                        })
                        mytable.ajax.reload();
                    },
                    error: function (data) {
                        Swal.fire({
                            icon: 'error',
                            text: 'Delete Failed',
                            timer: 2000
                        })

                    }
                })
                $('#editModal').modal('hide')

            }
        })

    })

</script>
</body>

</html>